$date
  Mon Mar 31 21:13:48 2025
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module counter_adder_tb $end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 4 # sum[3:0] $end
$var reg 1 $ cin $end
$var reg 1 % cout $end
$scope module adder_inst $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 1 ( cin $end
$var reg 4 ) sum[3:0] $end
$var reg 1 * cout $end
$var reg 5 + carry[4:0] $end
$scope module gen_adder(0) $end
$upscope $end
$scope module gen_adder(1) $end
$upscope $end
$scope module gen_adder(2) $end
$upscope $end
$scope module gen_adder(3) $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000 !
b0000 "
b0000 #
0$
0%
b0000 &
b0000 '
0(
b0000 )
0*
b00000 +
#10000000
b0001 !
b0001 "
b0010 #
b0001 &
b0001 '
b0010 )
b00010 +
#20000000
b1111 !
b0000 #
1%
b1111 &
b0000 )
1*
b11110 +
#30000000
b1111 "
b1111 #
1$
b1111 '
1(
b1111 )
b11111 +
#40000000
